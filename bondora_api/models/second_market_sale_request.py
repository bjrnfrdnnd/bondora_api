# coding: utf-8

"""
    Bondora API V1

    Bondora API version 1  # noqa: E501

    OpenAPI spec version: v1
    Contact: investor@bondora.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class SecondMarketSaleRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'items': 'list[SecondMarketSell]',
        'cancel_item_on_payment_received': 'bool',
        'cancel_item_on_reschedule': 'bool'
    }

    attribute_map = {
        'items': 'Items',
        'cancel_item_on_payment_received': 'CancelItemOnPaymentReceived',
        'cancel_item_on_reschedule': 'CancelItemOnReschedule'
    }

    def __init__(self, items=None, cancel_item_on_payment_received=None, cancel_item_on_reschedule=None):  # noqa: E501
        """SecondMarketSaleRequest - a model defined in Swagger"""  # noqa: E501

        self._items = None
        self._cancel_item_on_payment_received = None
        self._cancel_item_on_reschedule = None
        self.discriminator = None

        if items is not None:
            self.items = items
        if cancel_item_on_payment_received is not None:
            self.cancel_item_on_payment_received = cancel_item_on_payment_received
        if cancel_item_on_reschedule is not None:
            self.cancel_item_on_reschedule = cancel_item_on_reschedule

    @property
    def items(self):
        """Gets the items of this SecondMarketSaleRequest.  # noqa: E501

        LoanParts to sell  # noqa: E501

        :return: The items of this SecondMarketSaleRequest.  # noqa: E501
        :rtype: list[SecondMarketSell]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this SecondMarketSaleRequest.

        LoanParts to sell  # noqa: E501

        :param items: The items of this SecondMarketSaleRequest.  # noqa: E501
        :type: list[SecondMarketSell]
        """

        self._items = items

    @property
    def cancel_item_on_payment_received(self):
        """Gets the cancel_item_on_payment_received of this SecondMarketSaleRequest.  # noqa: E501

        Allows auto cancellation of loans on sale if they receive new repayments  # noqa: E501

        :return: The cancel_item_on_payment_received of this SecondMarketSaleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._cancel_item_on_payment_received

    @cancel_item_on_payment_received.setter
    def cancel_item_on_payment_received(self, cancel_item_on_payment_received):
        """Sets the cancel_item_on_payment_received of this SecondMarketSaleRequest.

        Allows auto cancellation of loans on sale if they receive new repayments  # noqa: E501

        :param cancel_item_on_payment_received: The cancel_item_on_payment_received of this SecondMarketSaleRequest.  # noqa: E501
        :type: bool
        """

        self._cancel_item_on_payment_received = cancel_item_on_payment_received

    @property
    def cancel_item_on_reschedule(self):
        """Gets the cancel_item_on_reschedule of this SecondMarketSaleRequest.  # noqa: E501

        Allows auto cancellation of loans on sale if they are rescheduled  # noqa: E501

        :return: The cancel_item_on_reschedule of this SecondMarketSaleRequest.  # noqa: E501
        :rtype: bool
        """
        return self._cancel_item_on_reschedule

    @cancel_item_on_reschedule.setter
    def cancel_item_on_reschedule(self, cancel_item_on_reschedule):
        """Sets the cancel_item_on_reschedule of this SecondMarketSaleRequest.

        Allows auto cancellation of loans on sale if they are rescheduled  # noqa: E501

        :param cancel_item_on_reschedule: The cancel_item_on_reschedule of this SecondMarketSaleRequest.  # noqa: E501
        :type: bool
        """

        self._cancel_item_on_reschedule = cancel_item_on_reschedule

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SecondMarketSaleRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SecondMarketSaleRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
